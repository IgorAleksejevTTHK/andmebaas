andmebaas - AB
ANDMEBAASI HALDUS - управление БД
andmebaasi haldussüsteem ABHS- система управления базами данных СУБД (sql server, xampp, oracle, ms acces)
andmed - данные 
tabel - таблица
veerg = väli (столбец/поле)
rida = kirje (строчка/запись)
päкing (quiery) - запрос 
loo - создать
laadi alla - skachaty
laadi üles - zakachaty
rakendus - приложение
varundamine - backup
taastamine - восстановление
päringukeel - язык запросов
relatsiooni andmebaas - 
seos - связь
piirang-ограничение


milleks on vaja ad? 
-hoiustada andmed
-päringu tegemine, et vajalikud andmed leida
-vältida andmete dubleerimist
andmetüübid
1.text/sümbol (varchar(25),char(5),TEXT)
2.Number (int,smallint,decimal(5, 2))
3.loogika bit,boolean,bool,true/false
4.date/time (date,time,interval)

Piirangud:
1.primary key - primaarne võti - lisab andmetabelis iga kirje unikaalsus
2.foreign key - välisvõti - seos tesi tabeliga
not null
unique - ainult 1 kord tabelis
check - valik  kasutaja saab valida

SQL - Structure Query Language - Struktuuri Päringukeel


CREATE DATABASE epoodAleksejev;
use epoodAleksejev;

CREATE TABLE Category (
idCategory INT pRIMARY key identity(1,1),
CategoryName varchar(25) UNIQUE
);
select * from product
insert into Category (CategoryName)
values ('jook'), ('söök')

--TABELI struktuuri muutmine-->uue vegu liisamine
ALTER TABLE Category ADD test int;

CREATE TABLE product(
idProduct INT pRIMARY key identity(1,1),
idCategory int,
ProductName varchar(10),
Price decimal(5,2),
Foreign key (idCategory) references Category(idCategory),
)

select * from product;
select * from Category;

insert into product (ProductName, idCategory, Price)
values ('Sokolaad',2, 3)

drop table product

Sale (idSale, idProduct, idCustomer, Count, DateOfSale)

create table Sale(
idSale INT pRIMARY key identity(1,1),
idProduct int,
Foreign key (idProduct) references Product(idProduct),
idCustomer int,
Count_ int,
DateOfSale date);

Create table customer (
idCustomer INT pRIMARY key identity(1,1),
Name varchar(25),
contact text)
--fk lisamine
Alter table sale add foreign key (idCustomer)
references Customer(idCustomer)

insert into Customer (Name)
values('Vlad', )

insert into Sale (idProduct, idCustomer, Count_, DateOfSale)
values(5,5,5,'2020-11-09')

select * from customer
select * from product
select * from category
select * from sale

